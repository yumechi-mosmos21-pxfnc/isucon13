user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

# 4096 * 4 = 16384 なので
worker_rlimit_nofile 16384;

events {
	worker_connections 4096;
	multi_accept on;
    use epoll;
}

http {
	##
	# Logging Settings
	##

    # 最後はOFFにする
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	# kataribe 用の log format
	# log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time';
	# access_log  /var/log/nginx/access.log main;

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	types_hash_max_size 2048;
	server_tokens off;

    # ファイルディスクリプタのキャッシュ
    # もしかすると不要かもしれない
	open_file_cache max=100000 inactive=10s;
	open_file_cache_valid 10s;
	open_file_cache_min_uses 2;
	open_file_cache_errors on;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	# proxy buffer の設定。
	# proxy_buffers 100 32k;
	# proxy_buffer_size 8k;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

    # 短すぎる可能性あり
	keepalive_timeout 10;
	client_header_timeout 10;
	client_body_timeout 10;
	reset_timedout_connection on;
	send_timeout 10;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Gzip Settings
	##

    # on, off のどちらがいいのかはアプリケーションによる
    # 今回はoffにしておく、CPUネックのケースはOFFでよい
	gzip off;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_min_length 1024;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	# 複数serverへ proxy
    # 必要になったらコメントアウトして使う
	# upstream app {
	# 	server 192.100.0.1:5000 weight=2;  // weight をつけるとproxyする量を変更可能。defaultは1。多いほどたくさんrequestを振り分ける。
	# 	server 192.100.0.2:5000;
	# 	server 192.100.0.3:5000;
    #     # keepalive 60; app server への connection を keepalive する。app が対応できるならした方が良い。
	# }

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
#
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
